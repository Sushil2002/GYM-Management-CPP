name: Delete inactive branches

on:
  schedule:
    - cron: '0 0 * * *' # Runs every day at 11:30 AM UTC

jobs:
  delete_inactive_branches:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: List branches
      run: |
        git fetch --prune --quiet
        git branch -r --format="%(committerdate:iso8601) %(refname:short)" --sort="-committerdate"

    - name: Read excluded branches from file
      id: read_excluded_branches
      run: |
        Get-Content excluded_branches.txt

    - name: Delete inactive branches
      run: |
        # Read excluded branches from the output of the previous step
        $excluded_branches = Get-Content excluded_branches.txt

        # Loop through branches and delete those inactive for more than 24 hours
        git branch -r --format="%(committerdate:iso8601) %(refname:short)" --sort="-committerdate" | ForEach-Object {
          $branch = $_ -split ' ', 2
          $branch_name = $branch[1].Trim()

          # Check if the branch should be excluded from deletion
          $excluded = $false
          foreach ($excluded_branch in $excluded_branches) {
            if ($branch_name -eq $excluded_branch) {
              $excluded = $true
              break
            }
          }

          # Delete the branch if it's older than 24 hours and not excluded
          if ([string]::IsNullOrWhiteSpace($branch_name)) {
            Write-Host "Invalid branch name: $branch_name"
          } else {
            # Get the last commit date for the branch
            $last_commit_date = git log -n 1 --format="%ci" $branch_name

            # Calculate 24 hours ago
            $twenty_four_hours_ago = (Get-Date).AddDays(-1)

            if ($last_commit_date -lt $twenty_four_hours_ago -and -not $excluded) {
              git push origin --delete $branch_name
            }
          }
        }
