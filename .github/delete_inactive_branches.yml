name: Delete inactive branches
​
on:
  schedule:
    - cron: '0 0 * * *' # Runs every day at midnight
​
jobs:
  delete_inactive_branches:
    runs-on: ubuntu-latest
​
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
​
    - name: List branches
      run: git branch -r --format='%(committerdate:iso8601) %(refname:short)' --sort='-committerdate'
​
    - name: Read excluded branches from file
      id: read_excluded_branches
      run: echo "::set-output name=excluded_branches::$(cat excluded_branches.txt)"
​
    - name: Delete inactive branches
      run: |
        # Read excluded branches from the output of the previous step
        excluded_branches=(${{ steps.read_excluded_branches.outputs.excluded_branches }})
​
        # Loop through branches and delete those inactive for more than 6 months
        while read -r branch; do
          branch_name=$(echo "$branch" | awk '{print $2}')
          last_commit_date=$(echo "$branch" | awk '{print $1}')
          six_months_ago=$(date --date="6 months ago" "+%Y-%m-%d")
​
          # Check if the branch should be excluded from deletion
          excluded=false
          for excluded_branch in "${excluded_branches[@]}"; do
            if [ "$branch_name" = "$excluded_branch" ]; then
              excluded=true
              break
            fi
          done
​
          # Delete the branch if it's older than 6 months and not excluded
          if [ "$last_commit_date" \< "$six_months_ago" ] && [ "$excluded" = false ]; then
            git push origin --delete "$branch_name"
          fi
        done <<< "$(git branch -r --format='%(committerdate:iso8601) %(refname:short)' --sort='-committerdate')"